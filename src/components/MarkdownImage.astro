---
import { Image } from 'astro:assets';
import { loadImage } from '../utils/imageLoader';

interface Props {
  src: string | ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  class?: string;
  [key: string]: any;
}

const { src, alt, width, height, loading = 'lazy', ...props } = Astro.props;

// Handle both imported images and string paths
let imageSrc: string | ImageMetadata = src;
let imageError = false;

if (typeof src === 'string' && src.startsWith('/media/')) {
  const loadedImage = loadImage(src);
  if (loadedImage) {
    imageSrc = loadedImage;
  } else {
    imageError = true;
  }
}
---

{imageError ? (
  <!-- Fallback for missing images -->
  <div class="image-error" role="img" aria-label={alt}>
    <span>⚠️ Image not found: {src}</span>
  </div>
) : typeof imageSrc === 'string' ? (
  <!-- Regular img tag for external URLs or unoptimizable images -->
  <img src={imageSrc} alt={alt} loading={loading} {...props} />
) : (
  <!-- Optimized Astro Image component -->
  <Image 
    src={imageSrc} 
    alt={alt} 
    loading={loading}
    width={width}
    height={height}
    {...props}
  />
)}

<style>
  .image-error {
    padding: 1rem;
    background-color: #fee;
    border: 1px solid #fcc;
    border-radius: 4px;
    color: #c00;
    font-family: monospace;
  }
</style>
