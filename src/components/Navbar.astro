---
import { getNavLinks } from "../utils/navigation";
import { Button } from "@components/starwind/button";
import { Icon } from "astro-icon/components";

interface Props {
    currentPath?: string;
}

const { currentPath = "/" } = Astro.props;
const navLinks = await getNavLinks();

// Normalize paths for comparison
const normalizedCurrentPath = currentPath === "" ? "/" : currentPath;
---

<nav
    class="border-border bg-background/95 supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50 w-full border-b backdrop-blur"
    aria-label="Main navigation"
>
    <div
        class="container mx-auto flex h-16 max-w-7xl items-center justify-between px-4"
    >
        <!-- Logo -->
        <a href="/" class="flex items-center gap-2" aria-label="Home">
            <picture>
                <source srcset="/brand/MooJing_Logo.webp" type="image/webp" />
                <img
                    src="/brand/MooJing_Logo.png"
                    alt="MooJing Logo"
                    class="h-10 w-auto"
                    width="40"
                    height="40"
                />
            </picture>
        </a>

        <!-- Desktop Navigation -->
        <div class="hidden items-center gap-6 md:flex">
            {
                navLinks.map((link) => {
                    const isActive = normalizedCurrentPath === link.href;
                    return (
                        <a
                            href={link.href}
                            class={`hover:text-foreground text-sm font-medium transition-colors ${
                                isActive
                                    ? "text-foreground"
                                    : "text-muted-foreground"
                            }`}
                            aria-current={isActive ? "page" : undefined}
                        >
                            {link.title}
                        </a>
                    );
                })
            }
        </div>

        <!-- Action Buttons (Desktop) -->
        <div class="hidden items-center gap-3 md:flex">
            <button
                id="theme-toggle-desktop"
                class="text-foreground hover:bg-muted focus-visible:ring-outline flex items-center justify-center rounded-md p-2 focus-visible:ring-2 focus-visible:outline-none"
                aria-label="Toggle theme"
            >
                <Icon name="tabler:sun" class="h-5 w-5 dark:hidden" />
                <Icon name="tabler:moon" class="hidden h-5 w-5 dark:block" />
            </button>
            <Button href="/contact" variant="ghost" size="md">
                Contact Us
            </Button>
            <Button href="/login" variant="primary" size="md"> Login </Button>
        </div>

        <!-- Mobile Buttons (Theme Toggle + Menu) -->
        <div class="flex items-center gap-2 md:hidden">
            <button
                id="theme-toggle-mobile"
                class="text-foreground hover:bg-muted focus-visible:ring-outline flex items-center justify-center rounded-md p-2 focus-visible:ring-2 focus-visible:outline-none"
                aria-label="Toggle theme"
            >
                <Icon name="tabler:sun" class="h-5 w-5 dark:hidden" />
                <Icon name="tabler:moon" class="hidden h-5 w-5 dark:block" />
            </button>
            <button
                id="mobile-menu-button"
                class="text-foreground hover:bg-muted focus-visible:ring-outline flex items-center justify-center rounded-md p-2 focus-visible:ring-2 focus-visible:outline-none"
                aria-label="Toggle menu"
                aria-expanded="false"
                aria-controls="mobile-menu"
            >
                <Icon
                    name="tabler:menu-2"
                    class="h-6 w-6"
                    id="menu-icon-open"
                />
                <Icon
                    name="tabler:x"
                    class="hidden h-6 w-6"
                    id="menu-icon-close"
                />
            </button>
        </div>
    </div>

    <!-- Mobile Menu -->
    <div
        id="mobile-menu"
        class="border-border bg-background hidden border-t md:hidden"
        role="dialog"
        aria-modal="true"
    >
        <div class="container mx-auto space-y-1 px-4 py-4">
            {
                navLinks.map((link) => {
                    const isActive = normalizedCurrentPath === link.href;
                    return (
                        <a
                            href={link.href}
                            class={`hover:bg-muted block rounded-md px-3 py-2 text-base font-medium transition-colors ${
                                isActive
                                    ? "bg-muted text-foreground"
                                    : "text-muted-foreground"
                            }`}
                            aria-current={isActive ? "page" : undefined}
                        >
                            {link.title}
                        </a>
                    );
                })
            }
            <div class="flex flex-col gap-2 pt-4">
                <Button
                    href="/contact"
                    variant="ghost"
                    size="md"
                    class="w-full"
                >
                    Contact Us
                </Button>
                <Button
                    href="/login"
                    variant="primary"
                    size="md"
                    class="w-full"
                >
                    Login
                </Button>
            </div>
        </div>
    </div>
</nav>

<script>
    // Theme toggle functionality
    function toggleTheme() {
        const html = document.documentElement;
        const currentTheme = html.classList.contains("dark") ? "dark" : "light";
        const newTheme = currentTheme === "dark" ? "light" : "dark";

        if (newTheme === "dark") {
            html.classList.add("dark");
        } else {
            html.classList.remove("dark");
        }

        localStorage.setItem("theme", newTheme);
    }

    // Attach theme toggle to both desktop and mobile buttons
    const themeToggleDesktop = document.getElementById("theme-toggle-desktop");
    const themeToggleMobile = document.getElementById("theme-toggle-mobile");

    themeToggleDesktop?.addEventListener("click", toggleTheme);
    themeToggleMobile?.addEventListener("click", toggleTheme);

    // Mobile menu toggle
    const menuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuIconOpen = document.getElementById("menu-icon-open");
    const menuIconClose = document.getElementById("menu-icon-close");

    menuButton?.addEventListener("click", () => {
        const isExpanded = menuButton.getAttribute("aria-expanded") === "true";

        // Toggle menu visibility
        mobileMenu?.classList.toggle("hidden");

        // Toggle icons
        menuIconOpen?.classList.toggle("hidden");
        menuIconClose?.classList.toggle("hidden");

        // Update aria-expanded
        menuButton.setAttribute("aria-expanded", String(!isExpanded));
    });

    // Close mobile menu when clicking outside
    document.addEventListener("click", (event) => {
        const target = event.target as HTMLElement;
        if (
            !menuButton?.contains(target) &&
            !mobileMenu?.contains(target) &&
            !mobileMenu?.classList.contains("hidden")
        ) {
            mobileMenu?.classList.add("hidden");
            menuIconOpen?.classList.remove("hidden");
            menuIconClose?.classList.add("hidden");
            menuButton?.setAttribute("aria-expanded", "false");
        }
    });

    // Close mobile menu on escape key
    document.addEventListener("keydown", (event) => {
        if (
            event.key === "Escape" &&
            !mobileMenu?.classList.contains("hidden")
        ) {
            mobileMenu?.classList.add("hidden");
            menuIconOpen?.classList.remove("hidden");
            menuIconClose?.classList.add("hidden");
            menuButton?.setAttribute("aria-expanded", "false");
            menuButton?.focus();
        }
    });
</script>
