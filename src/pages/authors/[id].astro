---
import MainLayout from "@layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import { getAllAuthors } from "../../utils/authors";

export async function getStaticPaths() {
    const authors = await getAllAuthors();
    return authors.map((author) => ({
        params: { id: author.id },
        props: { author },
    }));
}

const { author } = Astro.props;

// Get all blog posts by this author
const allPosts = await getCollection("blog");
const authorPosts = allPosts.filter((post) => 
    post.data.authors?.includes(author.id)
).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const title = `${author.name} - Author`;
const description = author.bio || `Articles by ${author.name}`;
---

<MainLayout {title} {description}>
    <div class="author-page">
        <div class="author-header">
            {author.avatar && (
                <img src={author.avatar} alt={author.name} class="author-avatar-large" />
            )}
            <div class="author-details">
                <h1>{author.name}</h1>
                {author.bio && <p class="author-bio">{author.bio}</p>}
                {author.email && (
                    <p class="author-email">
                        <a href={`mailto:${author.email}`}>{author.email}</a>
                    </p>
                )}
                {(author.twitter || author.linkedin || author.website) && (
                    <div class="author-social">
                        {author.website && (
                            <a href={author.website} target="_blank" rel="noopener noreferrer">
                                Website
                            </a>
                        )}
                        {author.twitter && (
                            <a href={author.twitter} target="_blank" rel="noopener noreferrer">
                                Twitter
                            </a>
                        )}
                        {author.linkedin && (
                            <a href={author.linkedin} target="_blank" rel="noopener noreferrer">
                                LinkedIn
                            </a>
                        )}
                    </div>
                )}
            </div>
        </div>

        <div class="author-posts">
            <h2>Articles by {author.name}</h2>
            {authorPosts.length === 0 ? (
                <p>No articles yet.</p>
            ) : (
                <div class="posts-grid">
                    {authorPosts.map((post) => (
                        <article class="post-card">
                            <a href={`/blog/${post.slug}`}>
                                {post.data.featured_image && (
                                    <img 
                                        src={post.data.featured_image} 
                                        alt={post.data.title}
                                        class="post-thumbnail"
                                    />
                                )}
                                <h3>{post.data.title}</h3>
                                {post.data.description && (
                                    <p class="post-excerpt">{post.data.description}</p>
                                )}
                                <time>{post.data.pubDate.toLocaleDateString()}</time>
                            </a>
                        </article>
                    ))}
                </div>
            )}
        </div>
    </div>
</MainLayout>

<style>
    .author-page {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .author-header {
        display: flex;
        gap: 2rem;
        margin-bottom: 3rem;
        padding-bottom: 2rem;
        border-bottom: 1px solid #e5e7eb;
    }

    .author-avatar-large {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        object-fit: cover;
    }

    .author-details {
        flex: 1;
    }

    .author-details h1 {
        margin-top: 0;
        margin-bottom: 1rem;
    }

    .author-bio {
        font-size: 1.125rem;
        color: #4b5563;
        margin-bottom: 1rem;
    }

    .author-email a {
        color: #2563eb;
        text-decoration: none;
    }

    .author-social {
        display: flex;
        gap: 1rem;
        margin-top: 1rem;
    }

    .author-social a {
        color: #2563eb;
        text-decoration: none;
        padding: 0.5rem 1rem;
        border: 1px solid #2563eb;
        border-radius: 0.375rem;
        transition: all 0.2s;
    }

    .author-social a:hover {
        background-color: #2563eb;
        color: white;
    }

    .author-posts h2 {
        margin-bottom: 2rem;
    }

    .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 2rem;
    }

    .post-card {
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        overflow: hidden;
        transition: box-shadow 0.2s;
    }

    .post-card:hover {
        box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
    }

    .post-card a {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .post-thumbnail {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .post-card h3 {
        padding: 1rem 1rem 0.5rem;
        margin: 0;
    }

    .post-excerpt {
        padding: 0 1rem;
        color: #6b7280;
        font-size: 0.875rem;
    }

    .post-card time {
        display: block;
        padding: 0.5rem 1rem 1rem;
        color: #9ca3af;
        font-size: 0.875rem;
    }
</style>
